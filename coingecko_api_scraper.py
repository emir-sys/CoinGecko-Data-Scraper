# -*- coding: utf-8 -*-
"""coingecko api scraper.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u7ON-PbxtX-58Bllkr_HS3_loatFuN5_
"""

import requests
import json

def get_crypto_data(page):
    api_url = 'https://api.coingecko.com/api/v3/coins/markets'
    params = {
        'vs_currency': 'usd',
        'order': 'market_cap_desc',
        'per_page': 10,
        'page': page,
    }

    response = requests.get(api_url, params=params)
    return response.json()

def clean_crypto_data(data):
    cleaned_data = []
    keys_to_keep = ['name', 'symbol', 'current_price', 'market_cap', 'price_change_percentage_24h']

    for item in data:
        cleaned_item = {}
        for key in keys_to_keep:
            if key == 'price_change_percentage_24h':
                cleaned_item[key] = round(item[key], 2)
            else:
                cleaned_item[key] = item[key]

        cleaned_data.append(cleaned_item)

    return cleaned_data

def save_to_json(first_page_data, second_page_data, filename='crypto_data.json'):
    formatted_data = {
        "first_page_response": first_page_data,
        "second_page_response": second_page_data
    }

    with open(filename, 'w') as json_file:
        json.dump(formatted_data, json_file, indent=4)

def load_cleaned_data(filename='crypto_data.json'):
    with open(filename, 'r') as json_file:
        return json.load(json_file)

def find_min_max(data, page_label):
    min_change = min(data, key=lambda x: x['price_change_percentage_24h'])
    max_change = max(data, key=lambda x: x['price_change_percentage_24h'])

    print(f"\nFor {page_label}:")
    print(f"The lowest 24h price change is {min_change['price_change_percentage_24h']}% for {min_change['name']}.")
    print(f"The highest 24h price change is {max_change['price_change_percentage_24h']}% for {max_change['name']}.")

def find_global_min_max(first_page_data, second_page_data):
    combined_data = first_page_data + second_page_data

    min_change = min(combined_data, key=lambda x: x['price_change_percentage_24h'])
    max_change = max(combined_data, key=lambda x: x['price_change_percentage_24h'])

    print(f"\nAcross both pages:")
    print(f"The lowest 24h price change is {min_change['price_change_percentage_24h']}% for {min_change['name']}.")
    print(f"The highest 24h price change is {max_change['price_change_percentage_24h']}% for {max_change['name']}.")

first_page_data = clean_crypto_data(get_crypto_data(1))
second_page_data = clean_crypto_data(get_crypto_data(2))

save_to_json(first_page_data, second_page_data)
print("Data saved to crypto_data.json")

find_min_max(first_page_data, "First Page")
find_min_max(second_page_data, "Second Page")
find_global_min_max(first_page_data, second_page_data)